<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="CenterLogoPicture.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEADAwAAAEAIACYAgAAFgAAACgAAAAMAAAAGAAAAAEAIAAAAAAAQAIAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEEAAABBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADAAAANAAAAJ4AAAChAAAAOwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoAAAAwQAA
        AMEAAAC+AAAAvgAAAHgAAAACAAAAAAAAAAAAAAAAAAAAAAAAABQAAAC/AAAAPQAAAF4AAABeAAAALAAA
        AMEAAAAeAAAAAAAAAAAAAAAAAAAAAAAAABEAAABgAAAACQAAAF8AAABcAAAAEwAAAL8AAAAoAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGkAAACQAAAAmAAAAKIAAAAKAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAUAAAAgwAAANYAAADNAAAAfgAAABoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACFAAAAogAA
        AIYAAABjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAAAC0AAAAOwAAAFkAAABdAAAAFQAA
        AFgAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAIAAACaAAAAhAAAAHUAAAB0AAAAgQAAAKAAAAADAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAoAAAAowAAANcAAADXAAAApQAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABgAAAFcAAABYAAAABwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQ
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>